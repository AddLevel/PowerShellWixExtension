<?xml version="1.0" encoding="utf-8"?>
<Include xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:powershell="http://schemas.gardiner.net.au/PowerShellWixExtensionSchema">
  
  <powershell:Script Id="Uninstall" Elevated="no">
    <![CDATA[
      # Note, for inline scripts square brackets need to be escaped so they don't get interpreted as MSI properties
      # $wid=[\[]System.Security.Principal.WindowsIdentity[\]]::GetCurrent()
      # $prp=new-object System.Security.Principal.WindowsPrincipal($wid)
      # $adm=[\[]System.Security.Principal.WindowsBuiltInRole[\]]::Administrator

      $session.Log("Running Uninstall Inline Script")

      $Name = (Get-ItemProperty -path HKLM:\SOFTWARE\nodeProtect\Web -name "Name" -ErrorAction SilentlyContinue).Name
      #$Name = $session.CustomActionData[\[]"WEBNAME"[\]]
        
      if ($Name) {
          $session.Log("Removing Web Application: $Name")
      
          # Remove WebSite
          if (Get-Website -Name $Name -ErrorAction SilentlyContinue) {
              $session.Log("Remove-Website -Name $Name")
              Remove-Website -Name $Name -Confirm:$False
          }

          # Remove WebAppPool
          if (Get-ItemProperty IIS:\AppPools\$Name -ErrorAction SilentlyContinue) {
              $session.Log("Remove-WebAppPool -Name $Name")
              Remove-WebAppPool -Name $Name -Confirm:$False
          }
      }
      
      $group = 'nodeProtect Default Tenant'
      $ADSI = [\[]ADSI[\]]("WinNT://$env:COMPUTERNAME")
      try {
          $groupObj = $ADSI.psbase.children.find($group)
          $session.Log("`$ADSI.Children.Remove('$group')")
          $ADSI.Children.Remove($groupObj)
      } catch { $session.Log($_.Exception.Message) }

    ]]>
  </powershell:Script>
  
</Include>
